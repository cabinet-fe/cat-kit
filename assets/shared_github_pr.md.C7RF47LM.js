import{_ as r,c as a,o as e,a6 as t}from"./chunks/framework.CRTY9GVS.js";const s=JSON.parse('{"title":"何为PR","description":"","frontmatter":{"title":"何为PR"},"headers":[],"relativePath":"shared/github/pr.md","filePath":"shared/github/pr.md","lastUpdated":1744265790000}'),p={name:"shared/github/pr.md"},l=[t('<h1 id="何为pr" tabindex="-1">何为PR <a class="header-anchor" href="#何为pr" aria-label="Permalink to &quot;何为PR&quot;">​</a></h1><p>PR是 pull request的缩写，含义是拉取请求。在git中拉取意味着代码的合并，因此你可以把PR理解为：代码贡献者请求代码审核者（仓库拥有者）合并贡献的代码。</p><p>PR发生在你fork的仓库，fork本意就是分叉的意思，你fork的仓库都会有原始仓库的信息，因此每个发起的pr都会被原仓库审核人看到。</p><h2 id="新建pr" tabindex="-1">新建PR <a class="header-anchor" href="#新建pr" aria-label="Permalink to &quot;新建PR&quot;">​</a></h2><p>在仓库的TAB栏中点击 Pull requests栏，点击New pull request, 就是这么简单。只要你在该代码分支中改过代码，就会自动出现提交记录和代码的比较，点击Create pull request按钮就会发起一个PR。</p><p><img src="/cat-kit/assets/pr1.oh1PGhc4.png" alt="PR"><br><img src="/cat-kit/assets/pr2.BgWJvXOR.jpg" alt="PR"></p>',6)];const i=r(p,[["render",function(r,t,s,p,i,h){return e(),a("div",null,l)}]]);export{s as __pageData,i as default};
