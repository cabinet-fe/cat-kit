import{_ as e,c as a,o as r,a6 as i}from"./chunks/framework.CRTY9GVS.js";const t=JSON.parse('{"title":"redis","description":"","frontmatter":{"title":"redis"},"headers":[],"relativePath":"shared/db/redis.md","filePath":"shared/db/redis.md","lastUpdated":1744265790000}'),d={name:"shared/db/redis.md"},l=[i('<h1 id="redis" tabindex="-1">redis <a class="header-anchor" href="#redis" aria-label="Permalink to &quot;redis&quot;">​</a></h1><p>NoSql阵营的数据库.</p><p>以键值的方式存储, 且数据大多时候存在内存中, 因此它快, 非常快. 快到就像你访问一个对象的属性(O(1)).</p><p>redis被广泛应用在缓存当中, 通过缓存来释放服务器的压力. 其次就是在分布式应用中也大量应用(其本质也是因为redis快, 支持的并发高).</p><p>因此使用redis就是因为它快(redis作者开发redis的原因就是嫌弃别的数据库太慢).</p><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><p><a href="https://raw.githubusercontent.com/redis/redis/7.2/redis.conf" target="_blank" rel="noreferrer">查看</a>Redis的配置文件</p><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><p>Redis的一些基础和概念</p><h3 id="数据结构" tabindex="-1">数据结构 <a class="header-anchor" href="#数据结构" aria-label="Permalink to &quot;数据结构&quot;">​</a></h3><p>redis的值支持以下的数据结构</p><ul><li>String 字符串</li><li>Hash 哈希 可以理解为一个对象</li><li>List 列表</li><li>Set 集合</li><li>SortedSet 有序集合</li><li>GEO 地理坐标</li><li>BitMap 位图</li><li>HyperLog</li></ul><h3 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h3>',13)];const s=e(d,[["render",function(e,i,t,d,s,o){return r(),a("div",null,l)}]]);export{t as __pageData,s as default};
